events {
  worker_connections 1024;
}

http {
  upstream backend {
    server backend:3000;
  }

  upstream backend-ws {
    server backend:8080;
  }

  server {
  listen       80;
  listen  [::]:80;
  server_name  localhost;

  # API routes
  location /api/ {
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Methods' 'GET, HEAD, POST, OPTIONS, PATCH';
      add_header 'Access-Control-Allow-Headers' '*';
      add_header 'Access-Control-Expose-Headers' '*';
      add_header 'Access-Control-Max-Age' 1728000;
      add_header 'Content-Type' 'text/plain; charset=utf-8';
      return 204;
    }
    if ($request_method = 'POST') {
      add_header 'Access-Control-Allow-Headers' '*';
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Methods' 'POST';
      add_header 'Access-Control-Expose-Headers' '*';
    }

    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Expose-Headers' '*';
    proxy_pass http://backend/;
  }

  # WebSocket routes
  location /ws/ {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_read_timeout 60;
    proxy_pass http://backend-ws/;
  }

  # Static file routes with caching
  location /static/ {
    add_header Cache-Control "max-age=31536000";
  }

  location /static/products {
    alias /app/data/products;
  }

  location /static/banners {
    alias /app/data/banners;
  }

  location /static/invoices {
    alias /app/data/invoices;
  }

  location /static/payouts {
    alias /app/data/payout_requests;
  }

  location /static/sellerPayouts {
    alias /app/data/seller_payouts;
  }

  location /static/writeOffs {
    alias /app/data/write_offs;
  }
  }
}
